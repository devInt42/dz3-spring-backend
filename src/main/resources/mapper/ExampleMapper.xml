<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.backend.mapper.ExampleMapper">
	<resultMap id="employeeMap"
		type="com.example.backend.dto.ExampleDto">
		<result property="employeeCode" column="employee_code"
			javaType="java.lang.Integer" jdbcType="INTEGER" />
		<result property="employeeId" column="employee_id"
			javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="employeeName" column="employee_name"
			javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="employeeBirth" column="employee_birth"
			javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="employeeCall" column="employee_call"
			javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="employeePwd" column="employee_pwd"
			javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="employeePh" column="employee_ph"
			javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="employeePmail" column="employee_pmail"
			javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="employeeCmail" column="employee_cmail"
			javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="employeeAddr" column="employee_addr"
			javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="employeeDept" column="employee_dept"
			javaType="java.lang.Integer" jdbcType="INTEGER" />
		<result property="employeePosition" column="employee_position"
			javaType="java.lang.String" jdbcType="VARCHAR" />
	</resultMap>

	<select id="getByCode" parameterType="int"
		resultMap="employeeMap">
		select * from
		employee where employee_code = #{employeeCode}
	</select>

	<select id="getList"
		parameterType="com.example.backend.dto.EmployeeDto"
		resultMap="employeeMap">
		select * from
		employee
		<where>
			<if test="employeeCode != null and employeeCode !=''">
				AND employee_code = #{employeeCode}
			</if>
			<if test="employeeName != null and employeeName !=''">
				And employee_name = #{employeeName}
			</if>
		</where>
	</select>

	<delete id="remove" parameterType="int">
		delete from employee where
		employee_code = #{employeeCode}
	</delete>

	<insert id="add" parameterType="map">
		insert into
		employee(employee_name) values(#{employeeName})
	</insert>

	<update id="set">
		update employee set employee_name = #{employeeName}
		where employee_code = #{employeeCode}
	</update>
</mapper>