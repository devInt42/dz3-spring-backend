<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.backend.mapper.AuthEmployeeMapper">
	<resultMap id="authEmployeeMap"
		type="com.example.backend.dto.mapping.AuthEmployeeDto">
		<result property="authSeq" column="auth_seq"
			javaType="java.lang.Integer" jdbcType="INTEGER" />
		<result property="employeeSeq" column="employee_seq"
			javaType="java.lang.Integer" jdbcType="INTEGER" />
		<result property="workplaceSeq" column="workplace_seq"
			javaType="java.lang.Integer" jdbcType="INTEGER" />
		<result property="departmentSeq" column="department_seq"
			javaType="java.lang.Integer" jdbcType="INTEGER" />
		<result property="companySeq" column="company_seq"
			javaType="java.lang.Integer" jdbcType="INTEGER" />
		<result property="authName" column="auth_name"
			javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="companyName" column="company_name"
			javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="authCode" column="auth_code"
			javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="departmentCode" column="department_code"
			javaType="java.lang.Integer" jdbcType="INTEGER" />
		<result property="departmentName" column="department_name"
			javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="employeeName" column="employee_name"
			javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="workplaceName" column="workplace_name"
			javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="title" column="title"
			javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="employeeId" column="employee_id"
			javaType="java.lang.String" jdbcType="VARCHAR" />
	</resultMap>

	<select id="getAuthListByCompany"
		parameterType="com.example.backend.dto.mapping.AuthEmployeeDto"
		resultMap="authEmployeeMap">
		SELECT distinct
		ae.auth_seq, ae.workplace_seq,
		ae.department_seq,
		ae.company_seq, a.auth_name, c.company_name,
		a.auth_code
		from
		auth_employee ae
		JOIN
		auth a
		on
		ae.auth_seq = a.auth_seq
		join
		company c
		on
		ae.company_seq = c.company_seq
		join
		workplace w
		on
		ae.workplace_seq =
		w.workplace_seq
		join
		department d
		on
		ae.department_seq = d.department_seq
		<where>
			<if test="companySeq != null and companySeq !=''">
				AND ae.company_seq = #{companySeq}
			</if>
			<if test="workplaceSeq != null and workplaceSeq !=''">
				AND ae.workplace_seq = #{workplaceSeq}
			</if>
			<if test="departmentSeq != null and departmentSeq !=''">
				AND ae.department_seq = #{departmentSeq}
			</if>
			<if test="authName != null and authName !=''">
				AND a.auth_name like CONCAT('%',#{authName},'%')
			</if>
		</where>
		LIMIT #{startPgNum},#{endPgNum}
	</select>


	<select id="getAuthListByAuth"
		parameterType="com.example.backend.dto.mapping.AuthEmployeeDto"
		resultMap="authEmployeeMap">
		SELECT
		ae.auth_seq, de.company_seq, de.workplace_seq,
		d.department_seq,
		de.employee_seq,
		de.sub_department_seq, de.title,
		d.department_name,e.employee_name,
		c.company_name, w.workplace_name,
		e.employee_id
		FROM
		department_employee de
		JOIN
		auth_employee ae
		ON
		de.employee_seq = ae.employee_seq
		JOIN
		department d
		ON
		d.department_seq =
		de.department_seq
		JOIN
		employee e
		ON
		de.employee_seq = e.employee_seq
		JOIN
		company c
		ON
		de.company_seq = c.company_seq
		JOIN
		workplace w
		ON
		de.workplace_seq = w.workplace_seq
		WHERE
		auth_seq = #{authSeq}
		<if test="companySeq != null and companySeq !=''">
			AND ae.company_seq = #{companySeq}
		</if>
		LIMIT
		#{startPgNum},#{endPgNum}

	</select>

	<select id="getCountByCompany"
		parameterType="com.example.backend.dto.mapping.AuthEmployeeDto"
		resultType="int">
		SELECT distinct
		COUNT(distinct ae.auth_seq)
		from
		auth_employee ae
		JOIN
		auth a
		on
		ae.auth_seq = a.auth_seq
		join
		company c
		on
		ae.company_seq =
		c.company_seq
		join
		workplace w
		on
		ae.workplace_seq =
		w.workplace_seq
		join
		department d
		on
		ae.department_seq = d.department_seq
		<where>
			<if test="companySeq != null and companySeq !=''">
				AND ae.company_seq = #{companySeq}
			</if>
			<if test="authName != null and authName !=''">
				AND a.auth_name like CONCAT('%',#{authName},'%')
			</if>
		</where>
	</select>
</mapper> 